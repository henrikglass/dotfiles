###############################################################################
# General configuration
###############################################################################

# Target name
TARGET = TODO

# directories
REL_OBJDIR = obj
DBG_OBJDIR = obj_debug
SRCDIR     = src
BINDIR     = bin

# files
SOURCES         := $(wildcard $(SRCDIR)/*.c)
INCLUDES        := $(wildcard $(SRCDIR)/*.h)

# make flags
MAKEFLAGS += --jobs $(shell nproc)

# gcc flags
WFLAGS                  =       -Werror -Wall -Wpedantic -Wextra -Wvla -Wnull-dereference \
                                        -Wswitch-enum -Wno-deprecated -Wduplicated-cond \
                                        -Wduplicated-branches -Wshadow -Wpointer-arith -Wcast-qual \
                                        -Winit-self -Wuninitialized -Wcast-align -Wstrict-aliasing \
                                        -Wformat=2 -Wmissing-declarations -Wmissing-include-dirs \
                                        -Wmissing-prototypes -Wstrict-prototypes -Wwrite-strings \
                                        -Wunused-parameter -Wno-error=cpp
CFLAGS  = -O2 -std=c11 $(WFLAGS) -fPIC -Iinclude

CPPCHECKFLAGS   =       --max-ctu-depth=3 --enable=all --inline-suppr --suppress=variableScope \
                                        --suppress=missingInclude --suppress=missingIncludeSystem \
                                        --suppress=unmatchedSuppression --suppress=unusedFunction --std=c11 \
                                        --error-exitcode=666
CLANGTIDYFLAGS  =       -checks=bugprone-*,cert-*,cppcoreguidelines-*,-cppcoreguidelines-avoid-non-const-global-variables,$\
                                        -cppcoreguidelines-avoid-magic-numbers,-cppcoreguidelines-init-variables,clang-analyzer-*,google-*,$\
                                        -google-readability-*,-clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling \
                                        --warnings-as-errors=*

.PHONY: all prep clean static-analysis

###############################################################################
# Platform specific configuration
###############################################################################
ifeq ($(TARGET_PREFIX), powerpc64-sonett-linux-)
TODO
else
TODO
endif

###############################################################################
# Debug/Release build specific configuration
###############################################################################

# Release config
REL_CFLAGS   = -DNDEBUG
REL_OBJECTS := $(SOURCES:$(SRCDIR)/%.c=$(REL_OBJDIR)/%.o)
REL_BINDIR  := $(BINDIR)/release
REL_TARGET   = $(REL_BINDIR)/$(TARGET)

# Debug config
DBG_CFLAGS   = -DDEBUG -O0 -pg -g
DBG_OBJECTS := $(SOURCES:$(SRCDIR)/%.c=$(DBG_OBJDIR)/%.o)
DBG_BINDIR  := $(BINDIR)/debug
DBG_TARGET   = $(DBG_BINDIR)/$(TARGET)

###############################################################################
# Build rules
###############################################################################

all: release

#
# Release build rules
#
release: $(REL_TARGET)

$(REL_TARGET): $(REL_OBJECTS)
        ar rcvs $@ $^

$(REL_OBJECTS): $(REL_OBJDIR)/%.o : $(SRCDIR)/%.c | prep
        $(CC) $(CFLAGS) $(CSFLAGS) $(REL_CFLAGS) -c $< -o $@

$(REL_OBJDIR):
        mkdir -p $(REL_OBJDIR)

#
# Debug build rules
#
debug: $(DBG_TARGET)

$(DBG_TARGET): $(DBG_OBJECTS)
        ar rcvs $@ $^

$(DBG_OBJECTS): $(DBG_OBJDIR)/%.o : $(SRCDIR)/%.c | prep
        $(CC) $(CFLAGS) $(CSFLAGS) $(DBG_CFLAGS) -c $< -o $@

$(DBG_OBJDIR):
        mkdir -p $(DBG_OBJDIR)

#
# Other rules
#
static-analysis:
        cppcheck $(CPPCHECKFLAGS) $(SOURCES) $(INCLUDES)
        clang-tidy $(CLANGTIDYFLAGS) $(SOURCES) $(INCLUDES) \
                           -- $(CFLAGS) -Wno-unknown-warning-option

prep:
        mkdir -p $(DBG_OBJDIR)
        mkdir -p $(DBG_BINDIR)
        mkdir -p $(REL_OBJDIR)
        mkdir -p $(REL_BINDIR)

clean:
        rm -rf bin & \
        rm -rf obj & \
        rm -rf obj_debug
